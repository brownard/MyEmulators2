<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="romToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="launchedFileTextBox.ToolTip" xml:space="preserve">
    <value>If the game is a launcher (e.g Steam), specify the name
of the launched executable to wait for here.
Note: only the filename without extension is required however
the plugin will automatically extract this if a full path/filename
is used.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resetPlayCount.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACK0lEQVQ4T42T30tTYRzGH+qm
        m0Kh2yLqIkYXXdhNXpU2nZoKEUJq5IR+0PWILiIInD+2bJX9IJ1tIwm3ES26KhJMcc6FNcFfUzLL9G+o
        q6fnPW50itPowMPL+758P+d7nud70BQC6m8jdf4R2DoAnnNQ6wOwugd094F1AYyShKlrltB0B6gNgLlv
        l5j93MmMg2Z0ll33MrPWyXtvK+nuhRj8DRCVqS97mVwpZ8JB8Xw54/NlTC7s48TXM0zOVbJGkMZ+dWDa
        qLmFcQMxh046pfY7ImBoGhxeAF+sHWBw7Cjrg3i43QZwSKoopWNe+Br6wbsfwEgefDwHenrxwwL8jwQv
        O34Vfm8UjC6Dz1bAWnX8R7Gc3SHYzn8BjzTD1aK0YvMCLAqgVCyASeK0DKkLglrHixHZQY0mrR5c8Q4L
        MAuOfCoATLHmACbn/NaIFVGD9sZhU2RWQXd5Arjccn8PE9kTjKbBwffyoA8/TaBWcW5jiE91EZoAT3aB
        xvmiqrrB6wkX3y128HlmN2NT4LVRsOoG4hCZmfVuDsndJzPg5MYFpjfbOb3Vzoxk1vRmG6e+t/HlsouR
        HDgggBk+GbvfAoyt+hjWxeBHMKycI3I5qqjsimkfXgJ9rwrfrtgLI4AK0+rrpYtWQdekWvdroHRmYrJL
        38zqm3hj5qVosPVTmAO3ClL5s9vZlh6qg8X/wOrAirEAkfv0+DHrNAf2Ivu99XrbY8b58N+Hpfa/AMiJ
        kO4DlIjbAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="resetLastPlayed.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACK0lEQVQ4T42T30tTYRzGH+qm
        m0Kh2yLqIkYXXdhNXpU2nZoKEUJq5IR+0PWILiIInD+2bJX9IJ1tIwm3ES26KhJMcc6FNcFfUzLL9G+o
        q6fnPW50itPowMPL+758P+d7nud70BQC6m8jdf4R2DoAnnNQ6wOwugd094F1AYyShKlrltB0B6gNgLlv
        l5j93MmMg2Z0ll33MrPWyXtvK+nuhRj8DRCVqS97mVwpZ8JB8Xw54/NlTC7s48TXM0zOVbJGkMZ+dWDa
        qLmFcQMxh046pfY7ImBoGhxeAF+sHWBw7Cjrg3i43QZwSKoopWNe+Br6wbsfwEgefDwHenrxwwL8jwQv
        O34Vfm8UjC6Dz1bAWnX8R7Gc3SHYzn8BjzTD1aK0YvMCLAqgVCyASeK0DKkLglrHixHZQY0mrR5c8Q4L
        MAuOfCoATLHmACbn/NaIFVGD9sZhU2RWQXd5Arjccn8PE9kTjKbBwffyoA8/TaBWcW5jiE91EZoAT3aB
        xvmiqrrB6wkX3y128HlmN2NT4LVRsOoG4hCZmfVuDsndJzPg5MYFpjfbOb3Vzoxk1vRmG6e+t/HlsouR
        HDgggBk+GbvfAoyt+hjWxeBHMKycI3I5qqjsimkfXgJ9rwrfrtgLI4AK0+rrpYtWQdekWvdroHRmYrJL
        38zqm3hj5qVosPVTmAO3ClL5s9vZlh6qg8X/wOrAirEAkfv0+DHrNAf2Ivu99XrbY8b58N+Hpfa/AMiJ
        kO4DlIjbAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="discCurrentColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="discNumColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="discFileColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>78</value>
  </metadata>
</root>